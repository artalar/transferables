"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const y=Object.getPrototypeOf(Int8Array),p=globalThis.AudioData,m=globalThis.VideoFrame,T=globalThis.OffscreenCanvas,b=globalThis.RTCDataChannel;async function w(){const a=await(async()=>{try{const s={channel:new MessageChannel};structuredClone(s,{transfer:[s.channel.port1,s.channel.port2]});const n=new MessageChannel,t={channel:new MessageChannel};await new Promise(r=>{n.port1.postMessage(t,[t.channel.port1,t.channel.port2]),n.port1.onmessage=()=>{n.port1.close(),r()},n.port2.onmessage=({data:e})=>{n.port2.postMessage(e,[e.channel.port1,e.channel.port2].filter(l=>l!=null))}})}catch(s){return console.warn(s),!1}return!0})(),o=await(async()=>{try{const s={readonly:new ReadableStream,writeonly:new WritableStream,tranformonly:new TransformStream};structuredClone(s,{transfer:[s.readonly,s.writeonly,s.tranformonly]});const n=new MessageChannel,t={readonly:new ReadableStream,writeonly:new WritableStream,tranformonly:new TransformStream};await new Promise(r=>{n.port1.postMessage(t,[t.readonly,t.writeonly,t.tranformonly]),n.port1.onmessage=()=>{n.port1.close(),r()},n.port2.onmessage=({data:e})=>{n.port2.postMessage(e,[e.readonly,e.writeonly,e.tranformonly].filter(l=>l!=null))}})}catch(s){return console.warn(s),!1}return!0})();return{channel:a,streams:o}}function u(a){return typeof a=="object"&&a!==null||typeof a=="function"}function h(a){return a instanceof y||a instanceof DataView}function c(a){return"ReadableStream"in globalThis&&a instanceof ReadableStream||"WritableStream"in globalThis&&a instanceof WritableStream||"TransformStream"in globalThis&&a instanceof TransformStream}function d(a){return"MessageChannel"in globalThis&&a instanceof MessageChannel}function g(a){return"ArrayBuffer"in globalThis&&a instanceof ArrayBuffer||"MessagePort"in globalThis&&a instanceof MessagePort||"AudioData"in globalThis&&a instanceof p||"ImageBitmap"in globalThis&&a instanceof ImageBitmap||"VideoFrame"in globalThis&&a instanceof m||"OffscreenCanvas"in globalThis&&a instanceof T||"RTCDataChannel"in globalThis&&a instanceof b}function C(a){return Array.from(new Set(a))}function S(a,o=!1,s=1e4){const n=new Set([]);let t=[],r=[a];for(;r.length>0&&s>0;){for(let e of r)if(h(e))n.add(e.buffer);else if(g(e))n.add(e);else if(d(e))n.add(e.port1),n.add(e.port2);else if(o&&c(e))n.add(e);else if(!c(e)&&u(e)){const l=Array.isArray(e)?e:Object.values(e),i=l.length;for(let f=0;f<i;f++)t.push(l[f])}r=t,t=[],s--}return Array.from(n)}function*A(a,o=!1,s=1e4){const n=new Set([]);let t=[a],r=[];for(;t.length>0&&s>0;){for(let e of t)if(!n.has(e)){if(h(e)){n.add(e);const{buffer:l}=e;if(n.has(l))continue;yield l,n.add(l)}else if(g(e))yield e,n.add(e);else if(d(e)){if(n.add(e),n.has(e.port1)||n.has(e.port2))continue;yield e.port1,yield e.port2,n.add(e.port1),n.add(e.port2)}else if(o&&c(e))yield e,n.add(e);else if(!c(e)&&u(e)){const l=Array.isArray(e)?e:Object.values(e),i=l.length;for(let f=0;f<i;f++)r.push(l[f])}}t=r,r=[],s--}return n.clear(),t=null,r=null,null}function M(a,o=!1,s=1e4){let n=[a],t=[];for(;n.length>0&&s>0;){for(let r of n){if(h(r))return!0;if(g(r))return!0;if(d(r))return!0;if(o&&c(r))return!0;if(u(r)&&!c(r)){const e=Array.isArray(r)?r:Object.values(r),l=e.length;for(let i=0;i<l;i++)t.push(e[i])}}n=t,t=[],s--}return n=null,t=null,!1}exports.AudioData=p;exports.OffscreenCanvas=T;exports.RTCDataChannel=b;exports.TypedArray=y;exports.VideoFrame=m;exports.filterOutDuplicates=C;exports.getTransferable=A;exports.getTransferables=S;exports.hasTransferables=M;exports.isMessageChannel=d;exports.isObject=u;exports.isStream=c;exports.isSupported=w;exports.isTransferable=g;exports.isTypedArray=h;
