"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const C=Object.getPrototypeOf(Int8Array),S=globalThis.AudioData,w=globalThis.VideoFrame,E=globalThis.OffscreenCanvas,O=globalThis.RTCDataChannel,T="ReadableStream"in globalThis,b="WritableStream"in globalThis,A="TransformStream"in globalThis,u="MessageChannel"in globalThis,M="MessagePort"in globalThis,v="ArrayBuffer"in globalThis,D="AudioData"in globalThis,R="ImageBitmap"in globalThis,x="VideoFrame"in globalThis,B="OffscreenCanvas"in globalThis,P="RTCDataChannel"in globalThis,y="structuredClone"in globalThis,V={ReadableStreamExists:T,WritableStreamExists:b,TransformStreamExists:A,MessageChannelExists:u,MessagePortExists:M,ArrayBufferExists:v,AudioDataExists:D,ImageBitmapExists:R,VideoFrameExists:x,OffscreenCanvasExists:B,RTCDataChannelExists:P};async function F(){async function t(){try{if(!u)return!1;const s=new MessageChannel,r={port1:s.port1},e=y?structuredClone(r,{transfer:[s.port1]}):r,a=new MessageChannel,o={port1:e.port1};await new Promise(l=>{a.port1.postMessage(o,[o.port1]),a.port1.onmessage=()=>{l()},a.port2.onmessage=({data:d})=>{a.port2.postMessage(d,[d.port1])}}),a.port1.close()}catch(s){return console.warn(s),!1}return!0}async function f(){try{if(!T||!b||!A||!u&&!y)return!1;const s={readonly:new ReadableStream,writeonly:new WritableStream,tranformonly:new TransformStream},r=y?structuredClone(s,{transfer:[s.readonly,s.writeonly,s.tranformonly]}):s;if(u){const e=new MessageChannel,a=r;await new Promise(o=>{e.port1.postMessage(a,[a.readonly,a.writeonly,a.tranformonly]),e.port1.onmessage=()=>{o()},e.port2.onmessage=({data:l})=>{e.port2.postMessage(l,[l.readonly,l.writeonly,l.tranformonly].filter(d=>d!==void 0))}}),e.port1.close()}}catch(s){return console.warn(s),!1}return!0}const[i,n]=await Promise.all([t(),f()]);return{channel:i,streams:n}}function g(t){return typeof t=="object"&&t!==null||typeof t=="function"}function h(t){return t instanceof C||t instanceof DataView}function c(t){return T&&t instanceof ReadableStream||b&&t instanceof WritableStream||A&&t instanceof TransformStream}function m(t){return u&&t instanceof MessageChannel}function p(t){return v&&t instanceof ArrayBuffer||M&&t instanceof MessagePort||D&&t instanceof S||R&&t instanceof ImageBitmap||x&&t instanceof w||B&&t instanceof E||P&&t instanceof O}function I(t){return Array.from(new Set(t))}function L(t,f=!1,i=1e4){const n=new Set([]),s=[[t]];for(const r of s){for(let e of r)if(p(e))n.add(e);else if(h(e))n.add(e.buffer);else if(m(e))n.add(e.port1),n.add(e.port2);else if(f&&c(e))n.add(e);else if(!c(e)&&g(e)){const a=Array.isArray(e)?e:Object.values(e);a.length&&s.push(a)}if(--i===0)break}return Array.from(n)}function*q(t,f=!1,i=1e4){const n=new Set([]);let s=[t],r=[];for(;s.length>0&&i>0;){for(let e of s)if(!n.has(e)){if(h(e)){n.add(e);const{buffer:a}=e;if(n.has(a))continue;yield a,n.add(a)}else if(p(e))yield e,n.add(e);else if(m(e)){if(n.add(e),n.has(e.port1)||n.has(e.port2))continue;yield e.port1,yield e.port2,n.add(e.port1),n.add(e.port2)}else if(f&&c(e))yield e,n.add(e);else if(!c(e)&&g(e)){const a=Array.isArray(e)?e:Object.values(e),o=a.length;for(let l=0;l<o;l++)r.push(a[l])}}s=r,r=[],i--}return n.clear(),s=null,r=null,null}function W(t,f=!1,i=1e4){let n=[t],s=[];for(;n.length>0&&i>0;){for(let r of n){if(h(r))return!0;if(p(r))return!0;if(m(r))return!0;if(f&&c(r))return!0;if(!c(r)&&g(r)){const e=Array.isArray(r)?r:Object.values(r),a=e.length;for(let o=0;o<a;o++)s.push(e[o])}}n=s,s=[],i--}return n=null,s=null,!1}exports.AVAILABLE_TRANSFERABLE_OBJECTS=V;exports.AudioData=S;exports.OffscreenCanvas=E;exports.RTCDataChannel=O;exports.TypedArray=C;exports.VideoFrame=w;exports.filterOutDuplicates=I;exports.getTransferable=q;exports.getTransferables=L;exports.hasTransferables=W;exports.isMessageChannel=m;exports.isObject=g;exports.isStream=c;exports.isSupported=F;exports.isTransferable=p;exports.isTypedArray=h;
