"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const b=Object.getPrototypeOf(Int8Array),A=globalThis.AudioData,C=globalThis.VideoFrame,w=globalThis.OffscreenCanvas,S=globalThis.RTCDataChannel,p="ReadableStream"in globalThis,m="WritableStream"in globalThis,y="TransformStream"in globalThis,T="MessageChannel"in globalThis,E="MessagePort"in globalThis,O="ArrayBuffer"in globalThis,M="AudioData"in globalThis,v="ImageBitmap"in globalThis,D="VideoFrame"in globalThis,R="OffscreenCanvas"in globalThis,B="RTCDataChannel"in globalThis,x={ReadableStreamExists:p,WritableStreamExists:m,TransformStreamExists:y,MessageChannelExists:T,MessagePortExists:E,ArrayBufferExists:O,AudioDataExists:M,ImageBitmapExists:v,VideoFrameExists:D,OffscreenCanvasExists:R,RTCDataChannelExists:B};async function V(){const t=await(async()=>{try{if(!T)return!1;const r=new MessageChannel,s={port1:r.port1},a=structuredClone(s,{transfer:[r.port1]}),n=new MessageChannel,e={port1:a.port1};await new Promise(o=>{n.port1.postMessage(e,[e.port1]),n.port1.onmessage=()=>{o()},n.port2.onmessage=({data:l})=>{n.port2.postMessage(l,[l.port1])}}),n.port1.close()}catch(r){return console.warn(r),!1}return!0})(),i=await(async()=>{try{if(!p||!m||!y)return!1;const r={readonly:new ReadableStream,writeonly:new WritableStream,tranformonly:new TransformStream},s=structuredClone(r,{transfer:[r.readonly,r.writeonly,r.tranformonly]}),a=new MessageChannel,n=s;await new Promise(e=>{a.port1.postMessage(n,[n.readonly,n.writeonly,n.tranformonly]),a.port1.onmessage=()=>{e()},a.port2.onmessage=({data:o})=>{a.port2.postMessage(o,[o.readonly,o.writeonly,o.tranformonly].filter(l=>l!==void 0))}}),a.port1.close()}catch(r){return console.warn(r),!1}return!0})();return{channel:t,streams:i}}function u(t){return typeof t=="object"&&t!==null||typeof t=="function"}function d(t){return t instanceof b||t instanceof DataView}function c(t){return p&&t instanceof ReadableStream||m&&t instanceof WritableStream||y&&t instanceof TransformStream}function g(t){return T&&t instanceof MessageChannel}function h(t){return O&&t instanceof ArrayBuffer||E&&t instanceof MessagePort||M&&t instanceof A||v&&t instanceof ImageBitmap||D&&t instanceof C||R&&t instanceof w||B&&t instanceof S}function F(t){return Array.from(new Set(t))}function P(t,i=!1,r=1e4){const s=new Set([]);let a=[],n=[t];for(;n.length>0&&r>0;){for(let e of n)if(h(e))s.add(e);else if(d(e))s.add(e.buffer);else if(g(e))s.add(e.port1),s.add(e.port2);else if(i&&c(e))s.add(e);else if(!c(e)&&u(e)){const o=Array.isArray(e)?e:Object.values(e),l=o.length;for(let f=0;f<l;f++)a.push(o[f])}n=a,a=[],r--}return Array.from(s)}function*I(t,i=!1,r=1e4){const s=new Set([]);let a=[t],n=[];for(;a.length>0&&r>0;){for(let e of a)if(!s.has(e)){if(d(e)){s.add(e);const{buffer:o}=e;if(s.has(o))continue;yield o,s.add(o)}else if(h(e))yield e,s.add(e);else if(g(e)){if(s.add(e),s.has(e.port1)||s.has(e.port2))continue;yield e.port1,yield e.port2,s.add(e.port1),s.add(e.port2)}else if(i&&c(e))yield e,s.add(e);else if(!c(e)&&u(e)){const o=Array.isArray(e)?e:Object.values(e),l=o.length;for(let f=0;f<l;f++)n.push(o[f])}}a=n,n=[],r--}return s.clear(),a=null,n=null,null}function L(t,i=!1,r=1e4){let s=[t],a=[];for(;s.length>0&&r>0;){for(let n of s){if(d(n))return!0;if(h(n))return!0;if(g(n))return!0;if(i&&c(n))return!0;if(u(n)&&!c(n)){const e=Array.isArray(n)?n:Object.values(n),o=e.length;for(let l=0;l<o;l++)a.push(e[l])}}s=a,a=[],r--}return s=null,a=null,!1}exports.AVAILABLE_TRANSFERABLE_OBJECTS=x;exports.AudioData=A;exports.OffscreenCanvas=w;exports.RTCDataChannel=S;exports.TypedArray=b;exports.VideoFrame=C;exports.filterOutDuplicates=F;exports.getTransferable=I;exports.getTransferables=P;exports.hasTransferables=L;exports.isMessageChannel=g;exports.isObject=u;exports.isStream=c;exports.isSupported=V;exports.isTransferable=h;exports.isTypedArray=d;
