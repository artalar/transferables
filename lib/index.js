(function(r,d){typeof exports=="object"&&typeof module<"u"?d(exports):typeof define=="function"&&define.amd?define(["exports"],d):(r=typeof globalThis<"u"?globalThis:r||self,d(r.Transferables={}))})(this,function(r){"use strict";const d=Object.getPrototypeOf(Int8Array),S=globalThis.AudioData,w=globalThis.VideoFrame,E=globalThis.OffscreenCanvas,O=globalThis.RTCDataChannel,p="ReadableStream"in globalThis,b="WritableStream"in globalThis,A="TransformStream"in globalThis,C="MessageChannel"in globalThis,M="MessagePort"in globalThis,v="ArrayBuffer"in globalThis,D="AudioData"in globalThis,R="ImageBitmap"in globalThis,B="VideoFrame"in globalThis,P="OffscreenCanvas"in globalThis,V="RTCDataChannel"in globalThis,F={ReadableStreamExists:p,WritableStreamExists:b,TransformStreamExists:A,MessageChannelExists:C,MessagePortExists:M,ArrayBufferExists:v,AudioDataExists:D,ImageBitmapExists:R,VideoFrameExists:B,OffscreenCanvasExists:P,RTCDataChannelExists:V};async function I(){async function n(){try{if(!C)return!1;const s=new MessageChannel,o={port1:s.port1},e=structuredClone(o,{transfer:[s.port1]}),a=new MessageChannel,i={port1:e.port1};await new Promise(l=>{a.port1.postMessage(i,[i.port1]),a.port1.onmessage=()=>{l()},a.port2.onmessage=({data:T})=>{a.port2.postMessage(T,[T.port1])}}),a.port1.close()}catch(s){return console.warn(s),!1}return!0}async function u(){try{if(!p||!b||!A)return!1;const s={readonly:new ReadableStream,writeonly:new WritableStream,tranformonly:new TransformStream},o=structuredClone(s,{transfer:[s.readonly,s.writeonly,s.tranformonly]}),e=new MessageChannel,a=o;await new Promise(i=>{e.port1.postMessage(a,[a.readonly,a.writeonly,a.tranformonly]),e.port1.onmessage=()=>{i()},e.port2.onmessage=({data:l})=>{e.port2.postMessage(l,[l.readonly,l.writeonly,l.tranformonly].filter(T=>T!==void 0))}}),e.port1.close()}catch(s){return console.warn(s),!1}return!0}const[f,t]=await Promise.all([n(),u()]);return{channel:f,streams:t}}function g(n){return typeof n=="object"&&n!==null||typeof n=="function"}function h(n){return n instanceof d||n instanceof DataView}function c(n){return p&&n instanceof ReadableStream||b&&n instanceof WritableStream||A&&n instanceof TransformStream}function m(n){return C&&n instanceof MessageChannel}function y(n){return v&&n instanceof ArrayBuffer||M&&n instanceof MessagePort||D&&n instanceof S||R&&n instanceof ImageBitmap||B&&n instanceof w||P&&n instanceof E||V&&n instanceof O}function L(n){return Array.from(new Set(n))}function j(n,u=!1,f=1e4){const t=new Set([]),s=[[n]];for(const o of s){for(let e of o)if(y(e))t.add(e);else if(h(e))t.add(e.buffer);else if(m(e))t.add(e.port1),t.add(e.port2);else if(u&&c(e))t.add(e);else if(!c(e)&&g(e)){const a=Array.isArray(e)?e:Object.values(e);a.length&&s.push(a)}if(--f===0)break}return Array.from(t)}function*q(n,u=!1,f=1e4){const t=new Set([]);let s=[n],o=[];for(;s.length>0&&f>0;){for(let e of s)if(!t.has(e)){if(h(e)){t.add(e);const{buffer:a}=e;if(t.has(a))continue;yield a,t.add(a)}else if(y(e))yield e,t.add(e);else if(m(e)){if(t.add(e),t.has(e.port1)||t.has(e.port2))continue;yield e.port1,yield e.port2,t.add(e.port1),t.add(e.port2)}else if(u&&c(e))yield e,t.add(e);else if(!c(e)&&g(e)){const a=Array.isArray(e)?e:Object.values(e),i=a.length;for(let l=0;l<i;l++)o.push(a[l])}}s=o,o=[],f--}return t.clear(),s=null,o=null,null}function W(n,u=!1,f=1e4){let t=[n],s=[];for(;t.length>0&&f>0;){for(let o of t){if(h(o))return!0;if(y(o))return!0;if(m(o))return!0;if(u&&c(o))return!0;if(!c(o)&&g(o)){const e=Array.isArray(o)?o:Object.values(o),a=e.length;for(let i=0;i<a;i++)s.push(e[i])}}t=s,s=[],f--}return t=null,s=null,!1}r.AVAILABLE_TRANSFERABLE_OBJECTS=F,r.AudioData=S,r.OffscreenCanvas=E,r.RTCDataChannel=O,r.TypedArray=d,r.VideoFrame=w,r.filterOutDuplicates=L,r.getTransferable=q,r.getTransferables=j,r.hasTransferables=W,r.isMessageChannel=m,r.isObject=g,r.isStream=c,r.isSupported=I,r.isTransferable=y,r.isTypedArray=h,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});
