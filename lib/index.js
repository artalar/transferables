(function(r,d){typeof exports=="object"&&typeof module<"u"?d(exports):typeof define=="function"&&define.amd?define(["exports"],d):(r=typeof globalThis<"u"?globalThis:r||self,d(r.Transferables={}))})(this,function(r){"use strict";const d=Object.getPrototypeOf(Int8Array),w=globalThis.AudioData,E=globalThis.VideoFrame,O=globalThis.OffscreenCanvas,M=globalThis.RTCDataChannel,b="ReadableStream"in globalThis,A="WritableStream"in globalThis,C="TransformStream"in globalThis,g="MessageChannel"in globalThis,v="MessagePort"in globalThis,D="ArrayBuffer"in globalThis,R="AudioData"in globalThis,B="ImageBitmap"in globalThis,P="VideoFrame"in globalThis,V="OffscreenCanvas"in globalThis,F="RTCDataChannel"in globalThis,S="structuredClone"in globalThis,I={ReadableStreamExists:b,WritableStreamExists:A,TransformStreamExists:C,MessageChannelExists:g,MessagePortExists:v,ArrayBufferExists:D,AudioDataExists:R,ImageBitmapExists:B,VideoFrameExists:P,OffscreenCanvasExists:V,RTCDataChannelExists:F};async function L(){async function n(){try{if(!g)return!1;const s=new MessageChannel,o={port1:s.port1},e=S?structuredClone(o,{transfer:[s.port1]}):o,a=new MessageChannel,i={port1:e.port1};await new Promise(l=>{a.port1.postMessage(i,[i.port1]),a.port1.onmessage=()=>{l()},a.port2.onmessage=({data:p})=>{a.port2.postMessage(p,[p.port1])}}),a.port1.close()}catch(s){return console.warn(s),!1}return!0}async function u(){try{if(!b||!A||!C||!g&&!S)return!1;const s={readonly:new ReadableStream,writeonly:new WritableStream,tranformonly:new TransformStream},o=S?structuredClone(s,{transfer:[s.readonly,s.writeonly,s.tranformonly]}):s;if(g){const e=new MessageChannel,a=o;await new Promise(i=>{e.port1.postMessage(a,[a.readonly,a.writeonly,a.tranformonly]),e.port1.onmessage=()=>{i()},e.port2.onmessage=({data:l})=>{e.port2.postMessage(l,[l.readonly,l.writeonly,l.tranformonly].filter(p=>p!==void 0))}}),e.port1.close()}}catch(s){return console.warn(s),!1}return!0}const[f,t]=await Promise.all([n(),u()]);return{channel:f,streams:t}}function h(n){return typeof n=="object"&&n!==null||typeof n=="function"}function m(n){return n instanceof d||n instanceof DataView}function c(n){return b&&n instanceof ReadableStream||A&&n instanceof WritableStream||C&&n instanceof TransformStream}function y(n){return g&&n instanceof MessageChannel}function T(n){return D&&n instanceof ArrayBuffer||v&&n instanceof MessagePort||R&&n instanceof w||B&&n instanceof ImageBitmap||P&&n instanceof E||V&&n instanceof O||F&&n instanceof M}function j(n){return Array.from(new Set(n))}function q(n,u=!1,f=1e4){const t=new Set([]),s=[[n]];for(const o of s){for(let e of o)if(T(e))t.add(e);else if(m(e))t.add(e.buffer);else if(y(e))t.add(e.port1),t.add(e.port2);else if(u&&c(e))t.add(e);else if(!c(e)&&h(e)){const a=Array.isArray(e)?e:Object.values(e);a.length&&s.push(a)}if(--f===0)break}return Array.from(t)}function*W(n,u=!1,f=1e4){const t=new Set([]);let s=[n],o=[];for(;s.length>0&&f>0;){for(let e of s)if(!t.has(e)){if(m(e)){t.add(e);const{buffer:a}=e;if(t.has(a))continue;yield a,t.add(a)}else if(T(e))yield e,t.add(e);else if(y(e)){if(t.add(e),t.has(e.port1)||t.has(e.port2))continue;yield e.port1,yield e.port2,t.add(e.port1),t.add(e.port2)}else if(u&&c(e))yield e,t.add(e);else if(!c(e)&&h(e)){const a=Array.isArray(e)?e:Object.values(e),i=a.length;for(let l=0;l<i;l++)o.push(a[l])}}s=o,o=[],f--}return t.clear(),s=null,o=null,null}function _(n,u=!1,f=1e4){let t=[n],s=[];for(;t.length>0&&f>0;){for(let o of t){if(m(o))return!0;if(T(o))return!0;if(y(o))return!0;if(u&&c(o))return!0;if(!c(o)&&h(o)){const e=Array.isArray(o)?o:Object.values(o),a=e.length;for(let i=0;i<a;i++)s.push(e[i])}}t=s,s=[],f--}return t=null,s=null,!1}r.AVAILABLE_TRANSFERABLE_OBJECTS=I,r.AudioData=w,r.OffscreenCanvas=O,r.RTCDataChannel=M,r.TypedArray=d,r.VideoFrame=E,r.filterOutDuplicates=j,r.getTransferable=W,r.getTransferables=q,r.hasTransferables=_,r.isMessageChannel=y,r.isObject=h,r.isStream=c,r.isSupported=L,r.isTransferable=T,r.isTypedArray=m,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});
