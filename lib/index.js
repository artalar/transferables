(function(t,c){typeof exports=="object"&&typeof module<"u"?c(exports):typeof define=="function"&&define.amd?define(["exports"],c):(t=typeof globalThis<"u"?globalThis:t||self,c(t.Transferables={}))})(this,function(t){"use strict";const c=Object.getPrototypeOf(Int8Array),b=globalThis.AudioData,m=globalThis.VideoFrame,p=globalThis.OffscreenCanvas,A=globalThis.RTCDataChannel;function S(){const n=(()=>{try{const r={channel:new MessageChannel};structuredClone(r,{transfer:[r.channel.port1,r.channel.port2]})}catch(r){return console.warn(r),!1}return!0})();return{streams:(()=>{try{const r={readonly:new ReadableStream,writeonly:new WritableStream,tranformonly:new TransformStream};structuredClone(r,{transfer:Object.values(r)})}catch(r){return console.warn(r),!1}return!0})(),channel:n}}function h(n){return typeof n=="object"&&n!==null||typeof n=="function"}function T(n){return n instanceof c||n instanceof DataView}function f(n){return"ReadableStream"in globalThis&&n instanceof ReadableStream||"WritableStream"in globalThis&&n instanceof WritableStream||"TransformStream"in globalThis&&n instanceof TransformStream}function g(n){return"MessageChannel"in globalThis&&n instanceof MessageChannel}function y(n){return"ArrayBuffer"in globalThis&&n instanceof ArrayBuffer||"MessagePort"in globalThis&&n instanceof MessagePort||"AudioData"in globalThis&&n instanceof b||"ImageBitmap"in globalThis&&n instanceof ImageBitmap||"VideoFrame"in globalThis&&n instanceof m||"OffscreenCanvas"in globalThis&&n instanceof p||"RTCDataChannel"in globalThis&&n instanceof A}function C(n){return Array.from(new Set(n))}function O(n,d=!1,r=1e4){const a=new Set([]);let l=[],s=[n];for(;s.length>0&&r>0;){for(let e of s)if(T(e))a.add(e.buffer);else if(y(e))a.add(e);else if(g(e))a.add(e.port1),a.add(e.port2);else if(d&&f(e))a.add(e);else if(!f(e)&&h(e)){const i=Array.isArray(e)?e:Object.values(e),o=i.length;for(let u=0;u<o;u++)l.push(i[u])}s=l,l=[],r--}return Array.from(a)}function*w(n,d=!1,r=1e4){const a=new Set([]);let l=[n],s=[];for(;l.length>0&&r>0;){for(let e of l)if(!a.has(e)){if(T(e)){a.add(e);const{buffer:i}=e;if(a.has(i))continue;yield i,a.add(i)}else if(y(e))yield e,a.add(e);else if(g(e)){if(a.add(e),a.has(e.port1)||a.has(e.port2))continue;yield e.port1,yield e.port2,a.add(e.port1),a.add(e.port2)}else if(d&&f(e))yield e,a.add(e);else if(!f(e)&&h(e)){const i=Array.isArray(e)?e:Object.values(e),o=i.length;for(let u=0;u<o;u++)s.push(i[u])}}l=s,s=[],r--}return a.clear(),l=null,s=null,null}function v(n,d=!1,r=1e4){let a=[n],l=[];for(;a.length>0&&r>0;){for(let s of a){if(T(s))return!0;if(y(s))return!0;if(g(s))return!0;if(d&&f(s))return!0;if(h(s)&&!f(s)){const e=Array.isArray(s)?s:Object.values(s),i=e.length;for(let o=0;o<i;o++)l.push(e[o])}}a=l,l=[],r--}return a=null,l=null,!1}t.AudioData=b,t.OffscreenCanvas=p,t.RTCDataChannel=A,t.TypedArray=c,t.VideoFrame=m,t.filterOutDuplicates=C,t.getTransferable=w,t.getTransferables=O,t.hasTransferables=v,t.isMessageChannel=g,t.isObject=h,t.isStream=f,t.isSupported=S,t.isTransferable=y,t.isTypedArray=T,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
